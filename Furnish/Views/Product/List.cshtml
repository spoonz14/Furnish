@model IEnumerable<Furnish.Models.Product>

@{
    ViewData["Title"] = "Shop";
}

<!-- Start Hero Section -->
<div class="hero">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-5">
                <div class="intro-excerpt">
                    <h1>Shop</h1>
                    <a class="btn btn-secondary" asp-controller="Home" asp-action="Index">Return</a>
                    <a class="btn btn-white-outline" asp-action="Search">Search</a>
                </div>
            </div>
            <div class="col-lg-7">
            </div>
        </div>
    </div>
</div>
<!-- End Hero Section -->
<!-- Start Product Section -->
<div class="product-section">
    <div class="container">
        <div class="row">

            <!-- Product Items -->
            @foreach (var item in Model)
            {
                if (Context.Request.Cookies.TryGetValue("jwtToken", out string token))
                {
                    <div class="col-md-4 col-lg-3 mb-5">
                        <form id="addToCartForm-@item.ProductId" asp-controller="Cart" asp-action="Cart" asp-route-productId="@item.ProductId" method="post">
                            <input type="hidden" name="ProductId" value="@item.ProductId" />
                            <button type="submit" class="btn btn-light-outline btn-block mb-2">Add to Cart</button>
                        </form>
                        <a href="@Url.Action("Details", "Product", new { id = item.ProductId })" class="product-item">
                            <img src="@Url.Content(item.ImageUrl)" class="img-fluid product-thumbnail">
                            <h3 class="product-title">@item.Name</h3>
                            <strong class="product-price">$@item.Price</strong>
                        </a>
                    </div>
                }
                else
                {
                    <div class="col-md-4 col-lg-3 mb-5">
                        <form asp-controller="Login" asp-action="Login" method="get">
                            <button type="submit" class="btn btn-light-outline btn-block mb-2">Add to Cart</button>
                        </form>
                    </div>
                }
                    
            }
            <!-- End Product Items -->

        </div>
    </div>
</div>
<!-- End Product Section -->
@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log('Document ready!');

            // Update the selector to target the 'data-product-id' attribute
            $('.add-to-cart-btn').on('click', function (e) {
                e.preventDefault();
                console.log('Add to cart button clicked.');

                // // Check if the user is authenticated
                // var isAuthenticated = checkAuthentication();
                // if (!isAuthenticated) {
                //     // Redirect the user to the login page
                //     window.location.href = '/Account/Login';
                //     return;
                // }

                // Retrieve the product ID using data attribute
                var ProductId = $(this).data('Product-id');
                console.log('Product ID:', ProductId); // Log the productId to verify

                // Get the JWT token from the cookie
                var token = getCookie('jwtToken');
                if (!token) {
                    console.error('JWT token not found in cookie.');
                    return;
                }

                // Make the AJAX request to add the product to the cart
                $.ajax({
                    url: '/Cart/Cart/' + productId,
                    type: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    success: function (response) {
                        console.log(response);
                        // Redirect to the cart view after adding the product
                        window.location.href = '/Cart/Cart' + productId;
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        // Optionally, handle the error (e.g., show error message to user)
                    }
                });
            });

            // Function to check if the user is authenticated
            function checkAuthentication() {
                // Implement your logic here to check if the user is authenticated
                // For demonstration purposes, returning true if the user is logged in
                // Replace this with your actual authentication logic
                return @User.Identity.IsAuthenticated.ToString().ToLower();
            }

            // Function to get cookie value by name
            function getCookie(name) {
                var value = "; " + document.cookie;
                var parts = value.split("; " + name + "=");
                if (parts.length == 2) return parts.pop().split(";").shift();
            }
        });

    </script>
}
